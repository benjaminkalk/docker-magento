#!/bin/bash

# shellcheck source=../env/db.env
source env/db.env

MYSQL_INTEGRATION_CONFIG=dev/tests/integration/etc/install-config-mysql.php

# If database doesn't exist, create it and add user permissions
bin/clinotty mysql -h"${MYSQL_INTEGRATION_HOST}" -uroot -p"${MYSQL_ROOT_PASSWORD}" "${MYSQL_INTEGRATION_DATABASE}" -e exit &> /dev/null ||
  bin/clinotty mysqladmin -h"${MYSQL_INTEGRATION_HOST}" -uroot -p"${MYSQL_ROOT_PASSWORD}" create "${MYSQL_INTEGRATION_DATABASE}" &&
  echo "Database ${MYSQL_INTEGRATION_DATABASE} created." &&
  bin/cli mysql -uroot -p"${MYSQL_ROOT_PASSWORD}" -h"${MYSQL_INTEGRATION_HOST}" \
    -e "GRANT ALL PRIVILEGES ON ${MYSQL_INTEGRATION_DATABASE}.* TO '${MYSQL_INTEGRATION_USER}'@'%';FLUSH PRIVILEGES;"

if [[ ! -f "src/${MYSQL_INTEGRATION_CONFIG}" ]]; then
  MAGENTO_VERSION=$(bin/magento --version --no-ansi | cut -d" " -f 3)
  IFS=. read -r -a MAGENTO_VERSION_SEGMENTS <<< "${MAGENTO_VERSION}"
  MAGENTO_MAJOR="${MAGENTO_VERSION_SEGMENTS[0]}.${MAGENTO_VERSION_SEGMENTS[1]}"
  cp template/"${MYSQL_INTEGRATION_CONFIG}"."${MAGENTO_MAJOR}".dist src/${MYSQL_INTEGRATION_CONFIG}
fi

bin/copytocontainer ${MYSQL_INTEGRATION_CONFIG}

PHPUNIT_CONFIG=dev/tests/integration/phpunit.xml.dist
# Uploads the phpunit.xml.dist file in the container in case it has changes.
# TODO: update 'bin/dev-test-run' to use 'phpunit.xml' instead of 'phpunit.xml.dist' and fix this script to add
# a check to create 'phpunit.xml' in case it doesn't exist based on phpunit.xml.dist.
if [[ -f "src/${PHPUNIT_CONFIG}" ]]; then
  bin/copytocontainer ${PHPUNIT_CONFIG}
fi
